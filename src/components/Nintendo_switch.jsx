/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 nintendo_switch.glb --transform 
Files: nintendo_switch.glb [4.59MB] > C:\Users\capta\Desktop\New folder (2)\public\models\nintendo_switch-transformed.glb [257.62KB] (94%)
Author: gabrieljuan0322 (https://sketchfab.com/gabrieljuan0322)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/nintendo-switch-b94e6a6a8c564fee81c2d794da6c5712
Title: Nintendo Switch
*/

import { useGLTF, useScroll } from '@react-three/drei'
import { useFrame, useThree } from '@react-three/fiber';
import { useLayoutEffect, useRef } from 'react'
import gsap from 'gsap';

export default function Nintendo_switch(props) {
  const { nodes, materials } = useGLTF('/models/switch.gltf')

  const nSwitch = useRef();
  const {camera} = useThree();
  console.log(camera.position)
  // const scroll = useScroll();
  // const t1 = useRef();

  // useFrame((state, delta) => {
  //   t1.current.seek(scroll.offset * t1.current.duration())
  // })

  // useLayoutEffect(() => {
  //   t1.current = gsap.timeline({
  //     defaults: {
  //       duration: 2,
  //       ease: 'power1.inOut'
  //     }
  //   })
  //   .to(nSwitch.current.scale, { x: 5, y: 5, z: 5 }, 2)  // Scaling to 5
  //   .to(nSwitch.current.position, { x: 1, y: 0, z: 0 }, 4)  // Translating to position (1, 0, 0)
  //   .to(nSwitch.current.position, { x: -1, y: 0, z: 0 }, 6)
  //   .to(nSwitch.current.scale, {x:1, y:1, z:1}, 8)
  //   .to(nSwitch.current.position, { x: 0, y: 0, z: 0 }, 8); // Translating to the original position (0, 0, 0)
  // }, []);
  
  return (
    <group {...props} dispose={null} ref={nSwitch}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.015}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.Nintendo_Switch_Nintendo_Switch_Material_0.geometry} material={materials.Nintendo_Switch_Material} position={[0, 0, 0]}  scale={1000} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/switch.gltf')
