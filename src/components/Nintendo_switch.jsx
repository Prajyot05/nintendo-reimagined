/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 nintendo_switch.glb --transform 
Files: nintendo_switch.glb [4.59MB] > C:\Users\capta\Desktop\New folder (2)\public\models\nintendo_switch-transformed.glb [257.62KB] (94%)
Author: gabrieljuan0322 (https://sketchfab.com/gabrieljuan0322)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/nintendo-switch-b94e6a6a8c564fee81c2d794da6c5712
Title: Nintendo Switch
*/

import { Environment, useGLTF, useScroll } from '@react-three/drei'
import { useFrame, useThree } from '@react-three/fiber';
import { useEffect, useRef, useState, useLayoutEffect } from 'react'
import { useControls } from "leva";
import {gsap} from 'gsap';
import {useGSAP} from '@gsap/react'
import { ScrollTrigger } from "gsap/dist/ScrollTrigger";



export default function Nintendo_switch(props) {
  const { nodes, materials } = useGLTF('/models/switch.gltf')

  const nSwitch = useRef();
  const { scene, camera } = useThree();
  const tl = gsap.timeline();


  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });

  const handleMouseMove = (event) => {
    setMousePosition({
      x: (event.clientX / window.innerWidth) * 4 - 1,
      y: (event.clientY / window.innerHeight) * 4 + 1,
    });
  };

  useEffect(() => {
    window.addEventListener('mousemove', handleMouseMove);
    return () => {
      window.removeEventListener('mousemove', handleMouseMove);
    };
  }, []);
  

  //Loading animation
  useGSAP(() => {
    gsap.to(scene.position, {
      x:0,y:-1.3,z:0,
      duration:2,
      delay:1
    })
    gsap.to(scene.rotation, {
      x:1.8,y:0,z:0,
      duration:2,
      delay:1, 
    })
  })


  //OnScroll Animations 
  useLayoutEffect(() => {
    new ScrollTrigger({});
    // component About.tsx
    tl.to(nSwitch.current.position, {
      x: 0,
      y: -1.5,
      z: 0,   
      scrollTrigger: {
        trigger: ".second-section",
        start: "top bottom",
        end: "top top",
        scrub: true,
        immediateRender: false,
      },
    })
    tl.to(nSwitch.current.scale, {
      x: 0.15,
      y: 0.15,
      z: 0.15,
      scrollTrigger: {
        trigger: ".second-section",
        start: "top bottom",
        end: "top -20%",
        scrub: true,
        immediateRender: false,
      },
    })
    .to(nSwitch.current.scale, {
      x: 0.0005,
      y: 0.0005,
      z: 0.0005,
      scrollTrigger: {
        trigger: ".store-page",
        start: "top 180%",
        end: "top top",
        scrub: true,
        immediateRender: false,
      },
    })
    .to(nSwitch.current.position, {
      x: 0,
      y: 3.5,
      z: 0,
      scrollTrigger: {
        trigger: ".store-page",
        start: "top bottom",
        end: "top top",
        scrub: true,
        immediateRender: false,
      },
    })
  }, []);

  return (
    <>
      <directionalLight
        castShadow
        intensity={2}
        position={[mousePosition.x , mousePosition.y, 1]}
      />
      <Environment preset='night' environmentIntensity={0.1}/>
      <ambientLight intensity={2} />
      <group {...props} dispose={null} ref={nSwitch} position={[0,-2.5,-0.8]} rotation={[-1.8,0,0]} scale={0.035}>
        <group rotation={[-Math.PI / 2, 0, 0]} >
          <group rotation={[Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.Nintendo_Switch_Nintendo_Switch_Material_0.geometry} material={materials.Nintendo_Switch_Material} position={[0, 0, 0]}  scale={1000} />
          </group>
        </group>
      </group>
    </>
    
  )
}

useGLTF.preload('/models/switch.gltf')
